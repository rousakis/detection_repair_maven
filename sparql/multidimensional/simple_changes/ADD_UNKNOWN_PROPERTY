INSERT INTO <changesOntology> {
?aup a co:Add_Unknown_Property;
    co:addUnProp_p1 ?s;
	co:addUnProp_p2 ?p;
	co:addUnProp_p3 ?o.
}
WHERE {
GRAPH <v2> {
{FILTER NOT EXISTS {?p rdfs:subPropertyOf rdfs:label}}
UNION 
{FILTER (?p != rdfs:label).} 
?s ?p ?o.
FILTER (?p != rdfs:label).
FILTER (?p != diachron:hasAttribute).
FILTER (?p != diachron:hasRecordAttribute). 
FILTER (?p != diachron:subject).
FILTER (?p != diachron:predicate).
FILTER (?p != diachron:object).
FILTER (?p != diachron:hasCodelist).
FILTER (?p != diachron:hasHierarchy).
FILTER (?p != diachron:inScheme).
FILTER (?p != diachron:hasParent).
FILTER (?p != diachron:hasDimension).
FILTER (?p != diachron:hasMeasure).      
FILTER (?p != diachron:isRelevantTo). 
FILTER (?p != rdf:type || diachron:DimensionProperty).
FILTER (?p != rdf:type || diachron:Observation).
FILTER (?p != rdf:type || diachron:RecordAttribute).
FILTER (?p != rdf:type || diachron:Codelist).
FILTER (?p != rdf:type || diachron:Hierarchy).
FILTER (?p != rdf:type || diachron:CodeListTerm).
FILTER (?p != rdf:type || diachron:MeasureProperty).
FILTER (?p != rdf:type || diachron:FactTable).
FILTER (?p != rdf:type || diachron:AttributeProperty).
}
FILTER NOT EXISTS { GRAPH <v1> {
?s ?p ?o.
}
}
#
BIND(IRI('v1') as ?v1).
BIND(IRI('v2') as ?v2).
BIND(concat("addUnProp", str(?s), str(?p), str(?o), str(?v1), str(?v2)) as ?url) .
#
BIND(IRI(CONCAT('http://addUnProp/',SHA1(?url))) AS ?aup).
}
